#!/usr/bin/env bash

COMMAND="${1}"
shift

set -e

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
if [ -f "${SCRIPT_DIR}/common-functions.sh" ]; then
  # shellcheck source=/dev/null
  . "${SCRIPT_DIR}/common-functions.sh"
  HW_BASE_DIR_PROVIDED="${SCRIPT_DIR}"
  export HW_BASE_DIR_PROVIDED
else
  log_message >&2 "FATAL common-functions.sh not found"
  exit 1
fi

if [ -z "${COMMAND}" ]; then
  error_usage_exit "No command provided"
fi

#
# print usage/help
#
usage() {
  echo "Usage:"
  echo "${BASH_SOURCE[0]} <command> [args]"
  echo "Commands:"
  echo "* 'check-config': check vault configured correctly."
  echo "* 'unwrap': unwrap secret."
  echo "Notes:"
  echo "* unwrap performed automatically during start if vault configured"
  echo "* if unwrapped secret file is exists and newer then wrapped secret file then unwrapping is skipped"
}

#
# Print error message, print usage and exit
# args:
# * error_message: message to print
#
error_usage_exit() {
  local error_message=$1
  print_level_message 2 ERROR "${error_message}"
  usage >&2
  exit 1
}

vault_unwrap() {
  local force_option=0
  while [ "${1}" != "" ]; do
    case "${1}" in
    force)
      force_option=1
      ;;
    --force)
      force_option=1
      ;;
    *)
      echo >&2 "Unknown unwrap option: '${1}'"
      exit 1
    esac
    shift
  done

  vault_unwrap_secret "${force_option}"
}

#
# run command supported
#
run_command() {
  local command=$1; shift;

  case "${command}" in
  help|--help)
    usage
    ;;
  check-config)
    vault_ensure_required
    ;;
  unwrap)
    vault_unwrap "$@"
    ;;
  *)
    error_usage_exit "Unknown command: ${command}"
    ;;
  esac
}

run_command "${COMMAND}" "$@"

