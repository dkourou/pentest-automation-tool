#!/usr/bin/env bash

property_key=$1

if [ -z "${property_key}" ]; then
  echo >&2 "Usage: get-config-value <config.value...>"
  echo >&2 "Please note: you will get the final value used by the configurator."
  echo >&2 "For full list of supported config parameters see user-template.ini"
  echo >&2 "Examples: "

  echo >&2 "* get-config-value b.root.password"
  echo >&2 "* get-config-value b.deck.https.port.expose"

fi

# shellcheck disable=SC2034
VENDOR_NAME="hexway"
# shellcheck disable=SC2034
VENDOR_CODE="hw"
# shellcheck disable=SC2034
BOX="bw"
# shellcheck disable=SC2034
PRODUCT_NAME="Hive"
# shellcheck disable=SC2034
SERVICE_NAME="hw-bw"
# shellcheck disable=SC2034
SERVICE_ENVVAR_PREFIX="HW_BW"


set -e

##
## Returns system user name to run in rootful mode
##
get_service_user_name() {
  
    echo "${VENDOR_CODE}-${BOX}-srv"
}

##
## calculate base target dir
##
get_service_base_dir() {
  local base_dir_var_name base_dir_provided
  base_dir_var_name="${SERVICE_ENVVAR_PREFIX}_BASE_DIR"
  service_user_name=$(get_service_user_name)

  printf -v base_dir_provided '%s' "${!base_dir_var_name}"
  if [ -n "${base_dir_provided}" ]; then
    echo "${base_dir_provided}"
    return 0
  elif [ "$(whoami)" == "${service_user_name}" ] || [ "$(whoami)" == root ]; then
    echo "/opt/${SERVICE_NAME}"
    return 0
  fi
  echo >&2 "To run ${0} under non root user ${USER} env var '${base_dir_var_name}' required"
  return 1
}

SERVICE_BASE_DIR=$(get_service_base_dir)

. "${SERVICE_BASE_DIR}/bin/common-functions.sh"

res=$(find_in_configs "${property_key}")
if [ "${res}" = "<unknown>" ]; then
  echo >&2 "config property '${property_key}' not found"
  exit 1
fi
echo "${res}"